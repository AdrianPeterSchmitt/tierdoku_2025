<?php

/**
 * Web-Installer für Tierdokumentation
 * 
 * Installation-Schritte:
 * 1. Systemprüfungen durchführen
 * 2. .env Datei erstellen
 * 3. Migrationen ausführen
 * 
 * WICHTIG: Nach erfolgreicher Installation diese Datei manuell löschen!
 */

// Define base path helper
if (!function_exists('base_path')) {
    function base_path($path = '') {
        return __DIR__ . '/..' . ($path ? '/' . ltrim($path, '/') : '');
    }
}

// Load composer autoload (for migrations)
if (file_exists(__DIR__ . '/../vendor/autoload.php')) {
    require __DIR__ . '/../vendor/autoload.php';
}

use Illuminate\Database\Capsule\Manager as Capsule;

// Configuration
$basePath = base_path();
$envFile = $basePath . '/.env';
$vendorPath = $basePath . '/vendor/autoload.php';
$migrationsPath = $basePath . '/database/migrations';
$storageLogsPath = $basePath . '/storage/logs';

// Systemprüfungen
function checkSystemRequirements() {
    global $vendorPath, $migrationsPath, $storageLogsPath;
    
    $checks = [
        'php_version' => [
            'name' => 'PHP-Version',
            'required' => '8.2',
            'check' => version_compare(PHP_VERSION, '8.2.0', '>='),
            'message' => PHP_VERSION . ' (mindestens 8.2 erforderlich)'
        ],
        'pdo' => [
            'name' => 'PDO Extension',
            'required' => 'PDO',
            'check' => extension_loaded('pdo'),
            'message' => extension_loaded('pdo') ? 'Vorhanden' : 'Nicht gefunden'
        ],
        'pdo_mysql' => [
            'name' => 'PDO MySQL Extension',
            'required' => 'pdo_mysql',
            'check' => extension_loaded('pdo_mysql'),
            'message' => extension_loaded('pdo_mysql') ? 'Vorhanden' : 'Nicht gefunden'
        ],
        'mbstring' => [
            'name' => 'mbstring Extension',
            'required' => 'mbstring',
            'check' => extension_loaded('mbstring'),
            'message' => extension_loaded('mbstring') ? 'Vorhanden' : 'Nicht gefunden'
        ],
        'openssl' => [
            'name' => 'OpenSSL Extension',
            'required' => 'openssl',
            'check' => extension_loaded('openssl'),
            'message' => extension_loaded('openssl') ? 'Vorhanden' : 'Nicht gefunden'
        ],
        'vendor' => [
            'name' => 'Composer Dependencies',
            'required' => 'vendor/autoload.php',
            'check' => file_exists($vendorPath),
            'message' => file_exists($vendorPath) ? 'Vorhanden' : 'Nicht gefunden - composer install ausführen'
        ],
        'migrations' => [
            'name' => 'Migrationen Verzeichnis',
            'required' => 'database/migrations',
            'check' => is_dir($migrationsPath) && count(glob($migrationsPath . '/*.php')) > 0,
            'message' => is_dir($migrationsPath) && count(glob($migrationsPath . '/*.php')) > 0 ? 'Vorhanden' : 'Nicht gefunden oder leer'
        ],
        'storage_logs' => [
            'name' => 'Storage/Logs Verzeichnis',
            'required' => 'storage/logs',
            'check' => is_dir($storageLogsPath) || is_writable(dirname($storageLogsPath)),
            'message' => is_dir($storageLogsPath) ? 'Vorhanden' : (is_writable(dirname($storageLogsPath)) ? 'Kann erstellt werden' : 'Nicht beschreibbar')
        ]
    ];
    
    $allPassed = true;
    foreach ($checks as $key => $check) {
        if (!$check['check']) {
            $allPassed = false;
            break;
        }
    }
    
    return [
        'all_passed' => $allPassed,
        'checks' => $checks
    ];
}

// Datenbankverbindung testen
function testDatabaseConnection($host, $port, $database, $username, $password) {
    try {
        $dsn = "mysql:host={$host};port={$port};charset=utf8mb4";
        $pdo = new PDO($dsn, $username, $password, [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_TIMEOUT => 5
        ]);
        
        // Prüfe ob Datenbank existiert
        $stmt = $pdo->query("SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = " . $pdo->quote($database));
        $dbExists = $stmt->fetchColumn() !== false;
        
        if (!$dbExists) {
            // Versuche Datenbank zu erstellen
            $pdo->exec("CREATE DATABASE IF NOT EXISTS `{$database}` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci");
        }
        
        return ['success' => true, 'message' => 'Datenbankverbindung erfolgreich'];
    } catch (PDOException $e) {
        return ['success' => false, 'message' => 'Datenbankverbindung fehlgeschlagen: ' . $e->getMessage()];
    }
}

// .env Datei erstellen
function createEnvFile($params, $envFile) {
    $envContent = "# Tierdokumentation - Environment Configuration\n";
    $envContent .= "# Auto-generated by installer\n\n";
    
    $envContent .= "APP_NAME={$params['APP_NAME']}\n";
    $envContent .= "APP_ENV={$params['APP_ENV']}\n";
    $envContent .= "APP_DEBUG=false\n";
    $envContent .= "APP_TIMEZONE={$params['APP_TIMEZONE']}\n\n";
    
    $envContent .= "DB_CONNECTION=mysql\n";
    $envContent .= "DB_HOST={$params['DB_HOST']}\n";
    $envContent .= "DB_PORT={$params['DB_PORT']}\n";
    $envContent .= "DB_DATABASE={$params['DB_DATABASE']}\n";
    $envContent .= "DB_USERNAME={$params['DB_USERNAME']}\n";
    $envContent .= "DB_PASSWORD={$params['DB_PASSWORD']}\n\n";
    
    $envContent .= "SESSION_SECURE=" . ($params['SESSION_SECURE'] ?? 'false') . "\n";
    $envContent .= "LOG_LEVEL={$params['LOG_LEVEL']}\n";
    
    if (file_put_contents($envFile, $envContent) === false) {
        return ['success' => false, 'message' => 'Fehler beim Erstellen der .env Datei'];
    }
    
    return ['success' => true, 'message' => '.env Datei erfolgreich erstellt'];
}

// Migrationen ausführen
function runMigrations($basePath, $migrationsPath) {
    // Load .env
    if (file_exists($basePath . '/.env')) {
        $dotenv = \Dotenv\Dotenv::createImmutable($basePath);
        $dotenv->load();
    }
    
    // Setup Database
    $capsule = new Capsule();
    
    $capsule->addConnection([
        'driver' => 'mysql',
        'host' => $_ENV['DB_HOST'] ?? 'localhost',
        'database' => $_ENV['DB_DATABASE'] ?? '',
        'username' => $_ENV['DB_USERNAME'] ?? '',
        'password' => $_ENV['DB_PASSWORD'] ?? '',
        'charset' => 'utf8mb4',
        'collation' => 'utf8mb4_unicode_ci',
        'prefix' => '',
    ]);
    
    $capsule->setAsGlobal();
    $capsule->bootEloquent();
    
    // Create migrations table if not exists
    if (!Capsule::schema()->hasTable('migrations')) {
        Capsule::schema()->create('migrations', function ($table) {
            $table->string('migration')->unique();
            $table->timestamp('run_at');
        });
    }
    
    // Get all migration files
    $migrations = glob($migrationsPath . '/*.php');
    
    if (empty($migrations)) {
        return ['success' => false, 'message' => 'Keine Migrationen gefunden'];
    }
    
    // Get already run migrations
    $runMigrations = Capsule::table('migrations')->pluck('migration')->toArray();
    
    $executed = 0;
    $errors = [];
    
    foreach ($migrations as $migrationFile) {
        $migrationName = basename($migrationFile);
        
        // Skip if already run
        if (in_array($migrationName, $runMigrations)) {
            continue;
        }
        
        try {
            $migration = require $migrationFile;
            
            if (is_callable($migration)) {
                $migration(Capsule::schema());
            }
            
            // Mark as run
            Capsule::table('migrations')->insert([
                'migration' => $migrationName,
                'run_at' => date('Y-m-d H:i:s'),
            ]);
            
            $executed++;
        } catch (Exception $e) {
            $errors[] = $migrationName . ': ' . $e->getMessage();
        }
    }
    
    if (!empty($errors)) {
        return ['success' => false, 'message' => 'Fehler bei Migrationen: ' . implode(', ', $errors)];
    }
    
    return ['success' => true, 'message' => "{$executed} Migration(en) erfolgreich ausgeführt"];
}

// Verzeichnisse erstellen
function ensureDirectories() {
    global $storageLogsPath;
    
    $errors = [];
    
    if (!is_dir($storageLogsPath)) {
        if (!mkdir($storageLogsPath, 0755, true)) {
            $errors[] = 'Konnte storage/logs Verzeichnis nicht erstellen';
        }
    } else {
        if (!is_writable($storageLogsPath)) {
            $errors[] = 'storage/logs Verzeichnis ist nicht beschreibbar';
        }
    }
    
    if (!empty($errors)) {
        return ['success' => false, 'message' => implode(', ', $errors)];
    }
    
    return ['success' => true, 'message' => 'Verzeichnisse erfolgreich erstellt/geprüft'];
}

// Process installation
$installComplete = false;
$installErrors = [];
$systemChecks = checkSystemRequirements();
$envExists = file_exists($envFile);
$showOverwriteWarning = false;

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Handle installation
    $action = $_POST['action'] ?? '';
    
    if ($action === 'install' || ($action === 'overwrite' && $envExists)) {
        // Ensure directories
        $dirResult = ensureDirectories();
        if (!$dirResult['success']) {
            $installErrors[] = $dirResult['message'];
        }
        
        // Validate and collect parameters
        $params = [
            'APP_NAME' => trim($_POST['APP_NAME'] ?? 'Tierdokumentation'),
            'APP_ENV' => trim($_POST['APP_ENV'] ?? 'production'),
            'APP_TIMEZONE' => trim($_POST['APP_TIMEZONE'] ?? 'Europe/Berlin'),
            'DB_HOST' => trim($_POST['DB_HOST'] ?? 'localhost'),
            'DB_PORT' => trim($_POST['DB_PORT'] ?? '3306'),
            'DB_DATABASE' => trim($_POST['DB_DATABASE'] ?? ''),
            'DB_USERNAME' => trim($_POST['DB_USERNAME'] ?? ''),
            'DB_PASSWORD' => $_POST['DB_PASSWORD'] ?? '',
            'SESSION_SECURE' => isset($_POST['SESSION_SECURE']) ? 'true' : 'false',
            'LOG_LEVEL' => trim($_POST['LOG_LEVEL'] ?? 'error'),
        ];
        
        // Validate required fields
        if (empty($params['DB_DATABASE']) || empty($params['DB_USERNAME'])) {
            $installErrors[] = 'Datenbank-Name und Benutzername sind erforderlich';
        }
        
        if (empty($installErrors)) {
            // Test database connection
            $dbTest = testDatabaseConnection(
                $params['DB_HOST'],
                $params['DB_PORT'],
                $params['DB_DATABASE'],
                $params['DB_USERNAME'],
                $params['DB_PASSWORD']
            );
            
            if (!$dbTest['success']) {
                $installErrors[] = $dbTest['message'];
            } else {
                // Create .env file
                $envResult = createEnvFile($params, $envFile);
                if (!$envResult['success']) {
                    $installErrors[] = $envResult['message'];
                } else {
                    // Run migrations
                    $migrationResult = runMigrations($basePath, $migrationsPath);
                    if (!$migrationResult['success']) {
                        $installErrors[] = $migrationResult['message'];
                    } else {
                        $installComplete = true;
                    }
                }
            }
        }
    } elseif ($action === 'check_overwrite' && $envExists) {
        $showOverwriteWarning = true;
    }
}
?>
<!DOCTYPE html>
<html lang="de" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Installation - Tierdokumentation</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gradient-to-br from-gray-900 via-slate-900 to-gray-900 text-white min-h-screen px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <div class="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur border border-gray-700/50 rounded-2xl p-8 shadow-2xl">
            <h1 class="text-3xl font-bold mb-2 text-center bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
                Tierdokumentation - Installation
            </h1>
            <p class="text-center text-gray-400 mb-8">Web-basierter Installer</p>
            
            <?php if ($installComplete): ?>
                <!-- Success Message -->
                <div class="bg-green-900/20 border border-green-500/50 rounded-lg p-6 mb-6">
                    <h2 class="text-2xl font-bold text-green-400 mb-4">✅ Installation erfolgreich!</h2>
                    <p class="text-gray-300 mb-4">
                        Die Installation wurde erfolgreich abgeschlossen. Die Anwendung ist jetzt einsatzbereit.
                    </p>
                    <div class="bg-yellow-900/20 border border-yellow-500/50 rounded-lg p-4 mb-4">
                        <p class="text-yellow-300 font-semibold">⚠️ WICHTIG - Sicherheitshinweis:</p>
                        <p class="text-gray-300 mt-2">
                            Bitte löschen Sie diese Installations-Datei (<code class="bg-gray-800 px-2 py-1 rounded">install.php</code>) manuell per FTP/SFTP, um Sicherheitsrisiken zu vermeiden!
                        </p>
                    </div>
                    <div class="mt-6">
                        <a href="/" class="inline-block px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold rounded-lg transition shadow-lg">
                            Zur Anwendung
                        </a>
                    </div>
                </div>
            <?php else: ?>
                <!-- System Checks -->
                <div class="mb-8">
                    <h2 class="text-xl font-bold mb-4">Systemprüfungen</h2>
                    <div class="space-y-2">
                        <?php foreach ($systemChecks['checks'] as $key => $check): ?>
                            <div class="flex items-center justify-between p-3 bg-gray-900/50 rounded-lg">
                                <div class="flex items-center gap-3">
                                    <?php if ($check['check']): ?>
                                        <span class="text-green-400 text-xl">✅</span>
                                    <?php else: ?>
                                        <span class="text-red-400 text-xl">❌</span>
                                    <?php endif; ?>
                                    <div>
                                        <div class="font-medium"><?= htmlspecialchars($check['name']) ?></div>
                                        <div class="text-sm text-gray-400"><?= htmlspecialchars($check['message']) ?></div>
                                    </div>
                                </div>
                                <div class="text-sm text-gray-500"><?= htmlspecialchars($check['required']) ?></div>
                            </div>
                        <?php endforeach; ?>
                    </div>
                    <?php if (!$systemChecks['all_passed']): ?>
                        <div class="mt-4 p-4 bg-red-900/20 border border-red-500/50 rounded-lg text-red-300">
                            ⚠️ Bitte beheben Sie alle Fehler in den Systemprüfungen, bevor Sie fortfahren.
                        </div>
                    <?php endif; ?>
                </div>
                
                <?php if ($envExists && !$showOverwriteWarning && !isset($_POST['action'])): ?>
                    <!-- Existing Installation Warning -->
                    <div class="mb-8 bg-yellow-900/20 border border-yellow-500/50 rounded-lg p-6">
                        <h2 class="text-xl font-bold text-yellow-400 mb-4">⚠️ Installation bereits vorhanden</h2>
                        <p class="text-gray-300 mb-4">
                            Es wurde bereits eine Installation gefunden (`.env` Datei existiert). Wenn Sie fortfahren, wird die bestehende Konfiguration überschrieben.
                        </p>
                        <form method="POST" class="inline">
                            <input type="hidden" name="action" value="check_overwrite">
                            <button type="submit" class="px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white font-semibold rounded-lg transition">
                                Trotzdem fortfahren
                            </button>
                        </form>
                    </div>
                <?php elseif ($showOverwriteWarning || (!$envExists && !isset($_POST['action']))): ?>
                    <!-- Installation Form -->
                    <?php if (!empty($installErrors)): ?>
                        <div class="mb-6 bg-red-900/20 border border-red-500/50 rounded-lg p-4">
                            <h3 class="font-bold text-red-400 mb-2">Fehler während der Installation:</h3>
                            <ul class="list-disc list-inside text-red-300">
                                <?php foreach ($installErrors as $error): ?>
                                    <li><?= htmlspecialchars($error) ?></li>
                                <?php endforeach; ?>
                            </ul>
                        </div>
                    <?php endif; ?>
                    
                    <?php if (!$systemChecks['all_passed']): ?>
                        <div class="mb-6 bg-red-900/20 border border-red-500/50 rounded-lg p-4 text-red-300">
                            ⚠️ Bitte beheben Sie alle Fehler in den Systemprüfungen, bevor Sie die Installation durchführen können.
                        </div>
                    <?php else: ?>
                        <form method="POST" class="space-y-6">
                            <input type="hidden" name="action" value="<?= $envExists ? 'overwrite' : 'install' ?>">
                            
                            <div>
                                <h2 class="text-xl font-bold mb-4">Anwendungs-Konfiguration</h2>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">App Name</label>
                                        <input type="text" name="APP_NAME" value="Tierdokumentation" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Environment</label>
                                        <select name="APP_ENV" class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                            <option value="production" selected>Production</option>
                                            <option value="local">Local</option>
                                        </select>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Zeitzone</label>
                                        <input type="text" name="APP_TIMEZONE" value="Europe/Berlin" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Log Level</label>
                                        <select name="LOG_LEVEL" class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                            <option value="error" selected>Error</option>
                                            <option value="warning">Warning</option>
                                            <option value="info">Info</option>
                                            <option value="debug">Debug</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <div>
                                <h2 class="text-xl font-bold mb-4">Datenbank-Konfiguration (MySQL)</h2>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Host</label>
                                        <input type="text" name="DB_HOST" value="localhost" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Port</label>
                                        <input type="text" name="DB_PORT" value="3306" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Datenbank-Name *</label>
                                        <input type="text" name="DB_DATABASE" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Benutzername *</label>
                                        <input type="text" name="DB_USERNAME" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                    <div class="md:col-span-2">
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Passwort *</label>
                                        <input type="password" name="DB_PASSWORD" required class="w-full px-3 py-2 bg-gray-900 border border-gray-700 rounded-lg focus:border-blue-500 focus:outline-none text-white">
                                    </div>
                                </div>
                            </div>
                            
                            <div>
                                <label class="flex items-center gap-2 cursor-pointer">
                                    <input type="checkbox" name="SESSION_SECURE" class="w-4 h-4 bg-gray-900 border border-gray-700 rounded text-blue-600 focus:ring-blue-500">
                                    <span class="text-sm font-medium text-gray-300">HTTPS verwenden (Session Secure)</span>
                                </label>
                            </div>
                            
                            <div class="pt-4 border-t border-gray-700/50">
                                <button type="submit" <?= !$systemChecks['all_passed'] ? 'disabled' : '' ?> class="px-8 py-3 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold rounded-lg transition shadow-lg disabled:opacity-50 disabled:cursor-not-allowed">
                                    Installation starten
                                </button>
                            </div>
                        </form>
                    <?php endif; ?>
                <?php endif; ?>
            <?php endif; ?>
        </div>
    </div>
</body>
</html>

